plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group = 'me.km127pl'
version = '0.1-ALPHA'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/groups/public/"
    }
}

compileJava {
    options.compilerArgs += ["-parameters", "-Xlint:unchecked", "-Xlint:deprecation"]
    options.fork = true
    options.forkOptions.executable = 'C:\\Users\\Jakub\\.jdks\\temurin-17.0.7\\bin\\javac.exe'
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"
    implementation("co.aikar:acf-paper:0.5.1-SNAPSHOT")
}

shadowJar {
    relocate 'co.aikar.commands', 'me.km127pl.elementalarsenal.acf'
    relocate 'co.aikar.locales', 'me.km127pl.elementalarsenal.locales'
    destinationDirectory.set(file("C:\\Users\\Jakub\\Desktop\\test_server\\plugins"))
}

//def targetJavaVersion = 17
//java {
//    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
//    sourceCompatibility = javaVersion
//    targetCompatibility = javaVersion
//    if (JavaVersion.current() < javaVersion) {
//        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
//    }
//}

//tasks.withType(JavaCompile).configureEach {
//    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
//        options.release = targetJavaVersion
//    }
//}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
